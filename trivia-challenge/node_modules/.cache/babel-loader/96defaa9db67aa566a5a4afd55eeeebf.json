{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/bogdan_code/src/screens/Questionaire.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = ({\n  answer,\n  className\n}) => /*#__PURE__*/_jsxDEV(\"button\", {\n  className: `p-4 rounded-lg w-48 border-2 border-blue-800 uppercase hover:text-white hover:bg-blue-800 ${className}`,\n  children: answer\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 5\n}, this);\n\n_c = Button;\nexport const Questionaire = ({\n  showAnswers,\n  handleNextQuestion,\n  data: {\n    question,\n    category,\n    difficulty,\n    correct_answer,\n    incorrect_answers\n  }\n}) => {\n  const shuffledAnswer = [correct_answer, incorrect_answers].sort(() => Math.random() - 0.5);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-5xl font-bold\",\n      children: category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-10 text-2xl\",\n      children: [\"Level: \", difficulty]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-8\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl\",\n        dangerouslySetInnerHTML: {\n          __html: question\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center mt-4 space-y-4 font-semibold \",\n      children: shuffledAnswer.map(answer => {\n        const textColor = showAnswers ? answer === correct_answer ? 'text-green-500' : 'text-red-500' : 'text-purple-500';\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `bg-white ${textColor} p-4 rounded-lg w-48 border-2 border-blue-800 uppercase hover:text-white hover:bg-blue-800`,\n          onClick: () => {},\n          children: answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n_c2 = Questionaire;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Questionaire\");","map":{"version":3,"sources":["/Users/macbook/Desktop/bogdan_code/src/screens/Questionaire.js"],"names":["React","Button","answer","className","Questionaire","showAnswers","handleNextQuestion","data","question","category","difficulty","correct_answer","incorrect_answers","shuffledAnswer","sort","Math","random","__html","map","textColor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,kBACX;AAAQ,EAAA,SAAS,EAAG,6FAA4FA,SAAU,EAA1H;AAAA,YAA8HD;AAA9H;AAAA;AAAA;AAAA;AAAA,QADJ;;KAAMD,M;AAKN,OAAO,MAAMG,YAAY,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,kBAAf;AAAmCC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA,UAAtB;AAAkCC,IAAAA,cAAlC;AAAkDC,IAAAA;AAAlD;AAAzC,CAAD,KAAuH;AAC/I,QAAMC,cAAc,GAAG,CAACF,cAAD,EAAiBC,iBAAjB,EAAoCE,IAApC,CAAyC,MAAMC,IAAI,CAACC,MAAL,KAAgB,GAA/D,CAAvB;AACA,sBACI;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,oBAAd;AAAA,gBAAoCP;AAApC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAG,MAAA,SAAS,EAAC,gBAAb;AAAA,4BAAsCC,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACI;AAAI,QAAA,SAAS,EAAC,UAAd;AAAyB,QAAA,uBAAuB,EAAE;AAAEO,UAAAA,MAAM,EAAET;AAAV;AAAlD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHJ,eAMI;AAAK,MAAA,SAAS,EAAC,0DAAf;AAAA,gBAEKK,cAAc,CAACK,GAAf,CAAmBhB,MAAM,IAAI;AAC1B,cAAMiB,SAAS,GAAGd,WAAW,GAAGH,MAAM,KAAKS,cAAX,GAA4B,gBAA5B,GAA+C,cAAlD,GAAmE,iBAAhG;AACA,4BACI;AACI,UAAA,SAAS,EAAG,YAAWQ,SAAU,4FADrC;AAEI,UAAA,OAAO,EAAE,MAAM,CAAG,CAFtB;AAAA,oBAGEjB;AAHF;AAAA;AAAA;AAAA;AAAA,gBADJ;AAOH,OATA;AAFL;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CAxBM;MAAME,Y","sourcesContent":["import React from 'react';\n\nconst Button = ({ answer, className }) => (\n    <button className={`p-4 rounded-lg w-48 border-2 border-blue-800 uppercase hover:text-white hover:bg-blue-800 ${className}`}>{answer}</button>\n);\n\n\nexport const Questionaire = ({ showAnswers, handleNextQuestion, data: { question, category, difficulty, correct_answer, incorrect_answers }, }) => {\n    const shuffledAnswer = [correct_answer, incorrect_answers].sort(() => Math.random() - 0.5);\n    return (\n        <div>\n            <h1 className=\"text-5xl font-bold\">{category}</h1>\n            <p className=\"mt-10 text-2xl\">Level: {difficulty}</p>\n            <div className=\"p-8\">\n                <h2 className=\"text-2xl\" dangerouslySetInnerHTML={{ __html: question }} />\n            </div>\n            <div className=\"flex flex-col items-center mt-4 space-y-4 font-semibold \">\n\n                {shuffledAnswer.map(answer => {\n                    const textColor = showAnswers ? answer === correct_answer ? 'text-green-500' : 'text-red-500' : 'text-purple-500';\n                    return (\n                        <button\n                            className={`bg-white ${textColor} p-4 rounded-lg w-48 border-2 border-blue-800 uppercase hover:text-white hover:bg-blue-800`}\n                            onClick={() => { }}\n                        >{answer}\n                        </button>\n                    )\n                })}\n            </div>\n        </div>\n    )\n};\n"]},"metadata":{},"sourceType":"module"}