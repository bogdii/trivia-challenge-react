{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/bogdan_code/src/screens/Questionaire.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = ({\n  answer,\n  className\n}) => /*#__PURE__*/_jsxDEV(\"button\", {\n  className: `p-4 rounded-lg w-48 border-2 border-blue-800 uppercase hover:text-white hover:bg-blue-800 ${className}`,\n  children: answer\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 3\n}, this);\n\n_c = Button;\nexport const Questionaire = ({\n  currentQuestionIndex,\n  setCurrentQuestionIndex,\n  showAnswers,\n  handleNextQuestion,\n  data: {\n    question,\n    category,\n    difficulty,\n    correct_answer,\n    incorrect_answers\n  }\n}) => {\n  const shuffledAnswer = [correct_answer, incorrect_answers].sort(() => Math.random() - 0.5);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"questionaire\", /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-5xl font-bold\",\n      children: category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-10 text-2xl\",\n      children: [\"Level: \", difficulty]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-8\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl\",\n        dangerouslySetInnerHTML: {\n          __html: question\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center mt-4 space-y-4 font-semibold \",\n      children: shuffledAnswer.map((answer, index) => {\n        const textColor = showAnswers ? answer === correct_answer ? \"text-green-500\" : \"text-red-500\" : \"text-purple-500\";\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `bg-white ${textColor} p-4 rounded-lg w-48 border-2 border-blue-800 uppercase hover:text-white hover:bg-blue-800`,\n          onClick: () => {\n            setCurrentQuestionIndex(++currentQuestionIndex, answer);\n          },\n          children: answer\n        }, `${answer}-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Questionaire;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Questionaire\");","map":{"version":3,"sources":["/Users/macbook/Desktop/bogdan_code/src/screens/Questionaire.js"],"names":["React","Button","answer","className","Questionaire","currentQuestionIndex","setCurrentQuestionIndex","showAnswers","handleNextQuestion","data","question","category","difficulty","correct_answer","incorrect_answers","shuffledAnswer","sort","Math","random","__html","map","index","textColor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,kBACb;AACE,EAAA,SAAS,EAAG,6FAA4FA,SAAU,EADpH;AAAA,YAGGD;AAHH;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMD,M;AAQN,OAAO,MAAMG,YAAY,GAAG,CAAC;AAC3BC,EAAAA,oBAD2B;AAE3BC,EAAAA,uBAF2B;AAG3BC,EAAAA,WAH2B;AAI3BC,EAAAA,kBAJ2B;AAK3BC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA,UAAtB;AAAkCC,IAAAA,cAAlC;AAAkDC,IAAAA;AAAlD;AALqB,CAAD,KAMtB;AACJ,QAAMC,cAAc,GAAG,CAACF,cAAD,EAAiBC,iBAAjB,EAAoCE,IAApC,CACrB,MAAMC,IAAI,CAACC,MAAL,KAAgB,GADD,CAAvB;AAGA,sBACE;AAAA,4CAEE;AAAI,MAAA,SAAS,EAAC,oBAAd;AAAA,gBAAoCP;AAApC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAG,MAAA,SAAS,EAAC,gBAAb;AAAA,4BAAsCC,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AACE,QAAA,SAAS,EAAC,UADZ;AAEE,QAAA,uBAAuB,EAAE;AAAEO,UAAAA,MAAM,EAAET;AAAV;AAF3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF,eAUE;AAAK,MAAA,SAAS,EAAC,0DAAf;AAAA,gBACGK,cAAc,CAACK,GAAf,CAAmB,CAAClB,MAAD,EAASmB,KAAT,KAAmB;AACrC,cAAMC,SAAS,GAAGf,WAAW,GACzBL,MAAM,KAAKW,cAAX,GACE,gBADF,GAEE,cAHuB,GAIzB,iBAJJ;AAKA,4BACE;AAEE,UAAA,SAAS,EAAG,YAAWS,SAAU,4FAFnC;AAGE,UAAA,OAAO,EAAE,MAAM;AACbhB,YAAAA,uBAAuB,CAAC,EAAED,oBAAH,EAAyBH,MAAzB,CAAvB;AACD,WALH;AAAA,oBAOGA;AAPH,WACQ,GAAEA,MAAO,IAAGmB,KAAM,EAD1B;AAAA;AAAA;AAAA;AAAA,gBADF;AAWD,OAjBA;AADH;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD,CA3CM;MAAMjB,Y","sourcesContent":["import React from \"react\";\n\nconst Button = ({ answer, className }) => (\n  <button\n    className={`p-4 rounded-lg w-48 border-2 border-blue-800 uppercase hover:text-white hover:bg-blue-800 ${className}`}\n  >\n    {answer}\n  </button>\n);\n\nexport const Questionaire = ({\n  currentQuestionIndex,\n  setCurrentQuestionIndex,\n  showAnswers,\n  handleNextQuestion,\n  data: { question, category, difficulty, correct_answer, incorrect_answers },\n}) => {\n  const shuffledAnswer = [correct_answer, incorrect_answers].sort(\n    () => Math.random() - 0.5\n  );\n  return (\n    <div>\n      questionaire\n      <h1 className=\"text-5xl font-bold\">{category}</h1>\n      <p className=\"mt-10 text-2xl\">Level: {difficulty}</p>\n      <div className=\"p-8\">\n        <h2\n          className=\"text-2xl\"\n          dangerouslySetInnerHTML={{ __html: question }}\n        />\n      </div>\n      <div className=\"flex flex-col items-center mt-4 space-y-4 font-semibold \">\n        {shuffledAnswer.map((answer, index) => {\n          const textColor = showAnswers\n            ? answer === correct_answer\n              ? \"text-green-500\"\n              : \"text-red-500\"\n            : \"text-purple-500\";\n          return (\n            <button\n              key={`${answer}-${index}`}\n              className={`bg-white ${textColor} p-4 rounded-lg w-48 border-2 border-blue-800 uppercase hover:text-white hover:bg-blue-800`}\n              onClick={() => {\n                setCurrentQuestionIndex(++currentQuestionIndex, answer);\n              }}\n            >\n              {answer}\n            </button>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}