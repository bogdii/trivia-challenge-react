{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/bogdan_code/src/screens/QuestionaireScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useGetPokemonByNameQuery } from \"../store/pokemon\";\nimport { Questionaire } from \"./Questionaire\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const QuestionaireScreen = ({\n  difficultyValue,\n  amountValue\n}) => {\n  _s();\n\n  var _data$results;\n\n  const [questionsData, setQuestionsData] = useState([]);\n  const {\n    data,\n    error,\n    isLoading,\n    isFetching,\n    refetch\n  } = useGetPokemonByNameQuery(difficultyValue, amountValue);\n  console.log(\"data\", data);\n  (data === null || data === void 0 ? void 0 : (_data$results = data.results) === null || _data$results === void 0 ? void 0 : _data$results.length) && !(questionsData === null || questionsData === void 0 ? void 0 : questionsData.length) && setQuestionsData(data === null || data === void 0 ? void 0 : data.results);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"...Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this) : //TODO: delete else code and add insted of it a component with questionsData props\n    (questionsData === null || questionsData === void 0 ? void 0 : questionsData.length) && questionsData.map((item, index) => /*#__PURE__*/_jsxDEV(Questionaire, {\n      data: item.question[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }, this)), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuestionaireScreen, \"sfwlc4oRDH4wBVMuPe+gOtlt7u4=\", false, function () {\n  return [useGetPokemonByNameQuery];\n});\n\n_c = QuestionaireScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionaireScreen\");","map":{"version":3,"sources":["/Users/macbook/Desktop/bogdan_code/src/screens/QuestionaireScreen.js"],"names":["React","useState","useGetPokemonByNameQuery","Questionaire","QuestionaireScreen","difficultyValue","amountValue","questionsData","setQuestionsData","data","error","isLoading","isFetching","refetch","console","log","results","length","map","item","index","question"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,wBAAT,QAAyC,kBAAzC;AACA,SAASC,YAAT,QAA6B,gBAA7B;;AACA,OAAO,MAAMC,kBAAkB,GAAG,CAAC;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA;AAAnB,CAAD,KAAsC;AAAA;;AAAA;;AACtE,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,EAAD,CAAlD;AAEA,QAAM;AACJQ,IAAAA,IADI;AAEJC,IAAAA,KAFI;AAGJC,IAAAA,SAHI;AAIJC,IAAAA,UAJI;AAKJC,IAAAA;AALI,MAMFX,wBAAwB,CAACG,eAAD,EAAkBC,WAAlB,CAN5B;AAOAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBN,IAApB;AACA,GAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,6BAAAA,IAAI,CAAEO,OAAN,gEAAeC,MAAf,KACE,EAACV,aAAD,aAACA,aAAD,uBAACA,aAAa,CAAEU,MAAhB,CADF,IAEET,gBAAgB,CAACC,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEO,OAAP,CAFlB;AAGA,sBACE;AAAA,eACGL,SAAS,gBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ,GAGR;AACA,KAAAJ,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEU,MAAf,KACAV,aAAa,CAACW,GAAd,CAAkB,CAACC,IAAD,EAAOC,KAAP,kBAChB,QAAC,YAAD;AAAc,MAAA,IAAI,EAAED,IAAI,CAACE,QAAL,CAAc,CAAd;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,CANJ,EAUGX,KAAK,iBAAI;AAAA,4BAAaA,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YAVZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA5BM;;GAAMN,kB;UASPF,wB;;;KATOE,kB","sourcesContent":["import React, { useState } from \"react\";\n\nimport { useGetPokemonByNameQuery } from \"../store/pokemon\";\nimport { Questionaire } from \"./Questionaire\";\nexport const QuestionaireScreen = ({ difficultyValue, amountValue }) => {\n  const [questionsData, setQuestionsData] = useState([]);\n\n  const {\n    data,\n    error,\n    isLoading,\n    isFetching,\n    refetch,\n  } = useGetPokemonByNameQuery(difficultyValue, amountValue);\n  console.log(\"data\", data);\n  data?.results?.length &&\n    !questionsData?.length &&\n    setQuestionsData(data?.results);\n  return (\n    <div>\n      {isLoading ? (\n        <div>...Loading</div>\n      ) : (\n        //TODO: delete else code and add insted of it a component with questionsData props\n        questionsData?.length &&\n        questionsData.map((item, index) => (\n          <Questionaire data={item.question[0]} />\n        ))\n      )}\n      {error && <div>Error: {error}</div>}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}