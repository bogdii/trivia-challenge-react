{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/bogdan_code/src/screens/StartScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { QuestionaireScreen } from \"./QuestionaireScreen\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DIFFICULTY = [\"easy\", \"medium\", \"hard\"];\nexport const StartScreen = () => {\n  _s();\n\n  const [amountValue, setAmountValue] = useState(\"\");\n  const [difficultyValue, setDifficultyValue] = useState(DIFFICULTY[0]);\n  const [isDropdownOpened, setIsDropdownOpened] = useState(false);\n  const [isFormSubmitted, setisFormSubmitted] = useState(false);\n\n  const handleAmountValueChange = e => +e.target.value && setAmountValue(e.target.value);\n\n  const handleChangeDropdownStatus = () => () => setIsDropdownOpened(!isDropdownOpened);\n\n  const handleChangeDifficultyValue = item => () => {\n    setDifficultyValue(item);\n    setIsDropdownOpened(!isDropdownOpened);\n  };\n\n  const handleSubmitForm = e => {\n    e.preventDefault();\n    amountValue && setisFormSubmitted(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isFormSubmitted ? /*#__PURE__*/_jsxDEV(QuestionaireScreen, {\n      amountValue: amountValue,\n      difficultyValue: difficultyValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: amountValue,\n        onChange: e => handleAmountValueChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: handleChangeDropdownStatus(),\n          children: difficultyValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), isDropdownOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: DIFFICULTY.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: handleChangeDifficultyValue(item),\n            children: item\n          }, `${item}-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: e => handleSubmitForm(e),\n        children: \"TRUE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StartScreen, \"ET+ufa3t+2wpbSeuItEcXI6Asoo=\");\n\n_c = StartScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"StartScreen\");","map":{"version":3,"sources":["/Users/macbook/Desktop/bogdan_code/src/screens/StartScreen.js"],"names":["React","useState","QuestionaireScreen","DIFFICULTY","StartScreen","amountValue","setAmountValue","difficultyValue","setDifficultyValue","isDropdownOpened","setIsDropdownOpened","isFormSubmitted","setisFormSubmitted","handleAmountValueChange","e","target","value","handleChangeDropdownStatus","handleChangeDifficultyValue","item","handleSubmitForm","preventDefault","map","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,kBAAT,QAAmC,sBAAnC;;AAEA,MAAMC,UAAU,GAAG,CAAC,MAAD,EAAS,QAAT,EAAmB,MAAnB,CAAnB;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAC/B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACM,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAACE,UAAU,CAAC,CAAD,CAAX,CAAtD;AACA,QAAM,CAACM,gBAAD,EAAmBC,mBAAnB,IAA0CT,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM,CAACU,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,CAAC,KAAD,CAAtD;;AAEA,QAAMY,uBAAuB,GAAIC,CAAD,IAC9B,CAACA,CAAC,CAACC,MAAF,CAASC,KAAV,IAAmBV,cAAc,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CADnC;;AAGA,QAAMC,0BAA0B,GAAG,MAAM,MACvCP,mBAAmB,CAAC,CAACD,gBAAF,CADrB;;AAGA,QAAMS,2BAA2B,GAAIC,IAAD,IAAU,MAAM;AAClDX,IAAAA,kBAAkB,CAACW,IAAD,CAAlB;AACAT,IAAAA,mBAAmB,CAAC,CAACD,gBAAF,CAAnB;AACD,GAHD;;AAKA,QAAMW,gBAAgB,GAAIN,CAAD,IAAO;AAC9BA,IAAAA,CAAC,CAACO,cAAF;AACAhB,IAAAA,WAAW,IAAIO,kBAAkB,CAAC,IAAD,CAAjC;AACD,GAHD;;AAKA,sBACE;AAAA,cACGD,eAAe,gBACd,QAAC,kBAAD;AACE,MAAA,WAAW,EAAEN,WADf;AAEE,MAAA,eAAe,EAAEE;AAFnB;AAAA;AAAA;AAAA;AAAA,YADc,gBAMd;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAEF,WAFT;AAGE,QAAA,QAAQ,EAAGS,CAAD,IAAOD,uBAAuB,CAACC,CAAD;AAH1C;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAA,gCACE;AAAK,UAAA,OAAO,EAAEG,0BAA0B,EAAxC;AAAA,oBAA6CV;AAA7C;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGE,gBAAgB,iBACf;AAAA,oBACGN,UAAU,CAACmB,GAAX,CAAe,CAACH,IAAD,EAAOI,KAAP,kBACd;AAEE,YAAA,OAAO,EAAEL,2BAA2B,CAACC,IAAD,CAFtC;AAAA,sBAIGA;AAJH,aACQ,GAAEA,IAAK,IAAGI,KAAM,EADxB;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAqBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAGT,CAAD,IAAOM,gBAAgB,CAACN,CAAD,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD,CA1DM;;GAAMV,W;;KAAAA,W","sourcesContent":["import React, { useState } from \"react\";\n\nimport { QuestionaireScreen } from \"./QuestionaireScreen\";\n\nconst DIFFICULTY = [\"easy\", \"medium\", \"hard\"];\n\nexport const StartScreen = () => {\n  const [amountValue, setAmountValue] = useState(\"\");\n  const [difficultyValue, setDifficultyValue] = useState(DIFFICULTY[0]);\n  const [isDropdownOpened, setIsDropdownOpened] = useState(false);\n  const [isFormSubmitted, setisFormSubmitted] = useState(false);\n\n  const handleAmountValueChange = (e) =>\n    +e.target.value && setAmountValue(e.target.value);\n\n  const handleChangeDropdownStatus = () => () =>\n    setIsDropdownOpened(!isDropdownOpened);\n\n  const handleChangeDifficultyValue = (item) => () => {\n    setDifficultyValue(item);\n    setIsDropdownOpened(!isDropdownOpened);\n  };\n\n  const handleSubmitForm = (e) => {\n    e.preventDefault();\n    amountValue && setisFormSubmitted(true);\n  };\n\n  return (\n    <div>\n      {isFormSubmitted ? (\n        <QuestionaireScreen\n          amountValue={amountValue}\n          difficultyValue={difficultyValue}\n        />\n      ) : (\n        <div className=\"container\">\n          <input\n            type=\"text\"\n            value={amountValue}\n            onChange={(e) => handleAmountValueChange(e)}\n          />\n          <div>\n            <div onClick={handleChangeDropdownStatus()}>{difficultyValue}</div>\n            {isDropdownOpened && (\n              <div>\n                {DIFFICULTY.map((item, index) => (\n                  <div\n                    key={`${item}-${index}`}\n                    onClick={handleChangeDifficultyValue(item)}\n                  >\n                    {item}\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n          <button type=\"submit\" onClick={(e) => handleSubmitForm(e)}>\n            TRUE\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}