{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const questionsSlice = createSlice({\n  name: \"questions\",\n  initialState: {\n    isStartScreenToShow: true\n  },\n  reducers: {\n    setIsStartScreenToShow: (state, action) => {\n      console.log(\"action\", action);\n      return state.isStartScreenToShow = action.payload;\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  setIsStartScreenToShow\n} = questionsSlice.actions;\nexport const selectIsStartScreenToShow = state => state.questions.isStartScreenToShow;\nexport default questionsSlice.reducer;","map":{"version":3,"sources":["/Users/macbook/Desktop/bogdan_code/src/store/questionaireSlice.js"],"names":["createSlice","questionsSlice","name","initialState","isStartScreenToShow","reducers","setIsStartScreenToShow","state","action","console","log","payload","actions","selectIsStartScreenToShow","questions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,cAAc,GAAGD,WAAW,CAAC;AACxCE,EAAAA,IAAI,EAAE,WADkC;AAExCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,mBAAmB,EAAE;AADT,GAF0B;AAKxCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,sBAAsB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzCC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB;AACA,aAAQD,KAAK,CAACH,mBAAN,GAA4BI,MAAM,CAACG,OAA3C;AACD;AAJO;AAL8B,CAAD,CAAlC,C,CAaP;;AACA,OAAO,MAAM;AAAEL,EAAAA;AAAF,IAA6BL,cAAc,CAACW,OAAlD;AAEP,OAAO,MAAMC,yBAAyB,GAAIN,KAAD,IACvCA,KAAK,CAACO,SAAN,CAAgBV,mBADX;AAGP,eAAeH,cAAc,CAACc,OAA9B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const questionsSlice = createSlice({\n  name: \"questions\",\n  initialState: {\n    isStartScreenToShow: true,\n  },\n  reducers: {\n    setIsStartScreenToShow: (state, action) => {\n      console.log(\"action\", action);\n      return (state.isStartScreenToShow = action.payload);\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { setIsStartScreenToShow } = questionsSlice.actions;\n\nexport const selectIsStartScreenToShow = (state) =>\n  state.questions.isStartScreenToShow;\n\nexport default questionsSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}