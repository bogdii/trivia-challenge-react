{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/bogdan_code/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Questionaire, StartScreen } from \"./screens/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [questions, setQuestions] = useState([]);\n  const [score, setScore] = useState(0);\n  const [showAnswers, setShowAnswers] = useState(false); // useEffect(() => {\n  //   fetch(API_URL)\n  //     .then((res) => res.json())\n  //     .then((data) => {\n  //       setQuestions(data.results);\n  //     });\n  // }, []);\n\n  const handleNextQuestion = () => {\n    setShowAnswers(false);\n  }; // <div className=\"container text-center text-blue-800\">\n\n\n  return /*#__PURE__*/_jsxDEV(StartScreen, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n}\n\n_s(App, \"mll1uhPpl0R7QmcIT+iK02HzPTs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/macbook/Desktop/bogdan_code/src/App.js"],"names":["React","useState","useEffect","Questionaire","StartScreen","App","questions","setQuestions","score","setScore","showAnswers","setShowAnswers","handleNextQuestion"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,iBAA1C;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,KAAD,CAA9C,CAHa,CAKb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMW,kBAAkB,GAAG,MAAM;AAC/BD,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GAFD,CAba,CAiBb;;;AACA,sBAAO,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAnBQN,G;;KAAAA,G;AAqBT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport { Questionaire, StartScreen } from \"./screens/index\";\n\nfunction App() {\n  const [questions, setQuestions] = useState([]);\n  const [score, setScore] = useState(0);\n  const [showAnswers, setShowAnswers] = useState(false);\n\n  // useEffect(() => {\n  //   fetch(API_URL)\n  //     .then((res) => res.json())\n  //     .then((data) => {\n  //       setQuestions(data.results);\n  //     });\n  // }, []);\n\n  const handleNextQuestion = () => {\n    setShowAnswers(false);\n  };\n\n  // <div className=\"container text-center text-blue-800\">\n  return <StartScreen />;\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}